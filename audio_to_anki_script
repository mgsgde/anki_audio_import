#!/usr/bin/env python3

import os
from anki.storage import Collection
import ffmpeg
cwd = os.getcwd()

audio_files_path = '/run/user/1000/gvfs/mtp:host=Xiaomi_Redmi_Note_8_Pro_gyvsfarwrwj7prqs/Internal shared storage/Recorders'
anki_user_path = '/home/mgsgde/.local/share/Anki2/mgsgde'
speed = 1.25

# load anki collection and deck
anki_user_collection_path = os.path.join(anki_user_path, "collection.anki2")
col = Collection(anki_user_collection_path, log=True)
modelBasic = col.models.byName('Basic')
deck = col.decks.byName('MediaImport')
col.decks.select(deck['id'])
col.decks.current()['mid'] = modelBasic['id']

os.chdir(cwd)

for input_file_name in os.listdir(audio_files_path):
    if input_file_name.endswith(".mp3"):
        print(input_file_name)
        # setup path names
        input_file_path = os.path.join(audio_files_path, input_file_name)

        converted_output_file_name = '{}_speeded_up.mp3'.format(
            input_file_name[:-4])
        converted_file_path = os.path.join(
            audio_files_path, converted_output_file_name)

        output_file_path = os.path.join(
            anki_user_path, 'collection.media', converted_output_file_name)

        # speed up audio files
        stream = ffmpeg.input(input_file_path)
        stream = ffmpeg.filter(stream, 'atempo', speed)
        stream = ffmpeg.output(stream, converted_file_path)
        stream = ffmpeg.overwrite_output(stream)
        ffmpeg.run(stream)

        # move to audio file to anki
        fname = col.media.addFile(converted_file_path)
        # create corresponding anki note for audio file
        note = col.newNote()
        note.fields[0] = fname[:-4]
        note.fields[1] = u'[sound:%s]' % fname
        col.addNote(note)

        # clean source
        os.remove(input_file_path)
        os.remove(converted_file_path)

col.save()
col.close()
